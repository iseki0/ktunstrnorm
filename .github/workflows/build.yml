name: Build

on:
  push:
    tags:
      - 'v*'
    branches:
      - 'master'
      - 'ci/*'
      - 'feat/*'
      - 'fix/*'
    pull_request:
    workflow_dispatch:
jobs:
  check:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version-file: '.java-version'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - uses: actions/cache@v4
        name: Cache Konan
        with:
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'buildSrc/**', '.github/**') }}
          path: |
            ~/.konan
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GradleEncryptionKey }} # openssl rand -base64 16
          validate-wrappers: true
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"
          gradle-version: wrapper
      - name: Run build
        run: ./gradlew check --stacktrace
      - name: Run build - CrossCompilation
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: ./gradlew check --stacktrace -Pkotlin.native.enableKlibsCrossCompilation=true
      - name: Upload build reports on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-reports-${{ matrix.os }}
          path: files/build/reports
          if-no-files-found: warn

  publish:
    needs: check
    if: ${{ startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version-file: '.java-version'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}
      - uses: actions/cache@v4
        name: Cache Konan
        with:
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'buildSrc/**', 'g/**') }}
          path: |
            ~/.konan
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GradleEncryptionKey }}
          validate-wrappers: true
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"
          gradle-version: wrapper
      - name: Store GPG key
        run: echo "${{ secrets.GPG_PK }}" | base64 --decode | gzip -d | gpg --import
      - name: Publish to Maven Central(Tagged)
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        run: |
          VERSION=${{ github.ref_name }}
          ./gradlew publish --stacktrace -Psigning.gnupg.keyName=pub@iseki.space -Pversion=${VERSION:1} -Pkotlin.native.enableKlibsCrossCompilation=true
      - name: Publish to Maven Central(Untagged)
        if: ${{ !startsWith(github.ref, 'refs/tags/v') && github.ref == 'refs/heads/master' }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        run: |
          VERSION=${{ github.ref_name }}
          ./gradlew publish --stacktrace -Psigning.gnupg.keyName=pub@iseki.space -Pkotlin.native.enableKlibsCrossCompilation=true
      - name: Manual upload default repository
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          curl -X 'POST' \
            'https://ossrh-staging-api.central.sonatype.com/manual/upload/defaultRepository/space.iseki.ktunstrnorm?publishing_type=user_managed' \
            -H 'accept: */*' \
            -H 'Authorization: Bearer ${{secrets.OSSRH_BEARER}}' \
            -d ''

